[tool.poetry]
name = "advent_of_code_2024"
version = "0.1.0"
description = "Solutions for AoC 2024. See https://adventofcode.com/."
authors = ["Marius Helf <marius@happyyeti.tech>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/mariushelf/advent_of_code_2024"
repository = "https://github.com/mariushelf/advent_of_code_2024"
documentation = "https://advent_of_code_2024.readthedocs.io"
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: PyPy"
]

# Only packages in this group will be installed in the release image
[tool.poetry.dependencies]
python = "^3.13"

# documentation
numpy = "^2.2.0"
[tool.poetry.group.docs.dependencies]
# Packages in this group won't be installed by pip,
# but are installed by poetry by default.
# So they are available in your dev environment,
# but not in a production environment.

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.0"
pytest = "^7.2.2"
pytest-cov = "^4.0.0"
tox = "^4.0.0"

[tool.ruff]
select = [
#    "ANN",  # flake8-annotations
    "E",  # flake8
    "F",  # flake8
    "I",  # isort
#    "D",  # pydocstyle
    "S",  # flake8-bandit
    "NPY",  # numpy-specific rules
    "RUF",  # ruff specific rules
]
ignore = [
    "E501",
    "E712",

    "ANN101",  # Missing type annotation for `self` in method
    "ANN202",  # Missing return type annotation for private function
    "ANN204",  # Missing return type annotation for special function
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed

    # pydocstyle
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
    "D106",  # Missing docstring in public nested class
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**" = ["S", "ANN"]

[tool.ruff.pydocstyle]
convention = "numpy"


[build-system]
requires = ["poetry-core>=1.4"]
build-backend = "poetry.core.masonry.api"
